version: 2
jobs:
  build:
    parallelism: 3
    working_directory: ~/export-opportunities
    docker:
      - image: circleci/ruby:2.5.5-node
        environment:
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          PGHOST: localhost
          PGUSER: root
          RAILS_ENV: test
      - image: circleci/postgres:latest
        environment:
          POSTGRES_USER: root
          POSTGRES_DB:  circle_test
          POSTGRES_PASSWORD: $POSTGRES_PASSWORD
    branches:
      only: XOT-597-circleci
    steps:
      - checkout # check out the code in the project directory
      # restore bundle cache  
      - restore_cache:
          keys:
            - exops-{{ checksum "Gemfile.lock" }}

      - run:
          name: Bundle Install
          command: bundle check || bundle install

      # store bundle cache
      - save_cache:
          key: exops-{{ checksum "Gemfile.lock" }}
          paths: 
            - vendor/bundle

      # Database setup
      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: Database setup
          command: |
            bundle exec rake db:create
            bundle exec rake db:structure:load

      # - run:
      #     name: Database setup
      #    command: bin/rails db:migrate --trace

      # - run:
      #     name: Database setup
      #     command: bin/rails db:schema:load --trace

      # Run rspec in parallel 
      - run: |
          echo Running test ...
          bundle exec rspec --profile 10 \
                      --format RspecJunitFormatter \
                      --out test_results/rspec.xml \
                      --format progress \
                      $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
      
      # Save test results for timing analysis
      - store_test_results:
          path: test_results 

      - run: echo "hello world" # run the `echo` command
